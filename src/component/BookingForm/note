import React, { useState, useEffect } from "react";
import PhoneInput from "react-phone-input-2";
import "react-phone-input-2/lib/style.css";
import { loadStripe } from "@stripe/stripe-js";

const stripePromise = loadStripe(
  "pk_test_51Nvbq5F7Uk1wKpJKRCrfXv9DbZhzKQgZpU6MBNOYOQL1DYtCmMBlQoTLYUPI6fBy6SxMFCt8eihEOZVi3wyeN0Yc00LLYFweV8"
);

const sessionsOptions = [
  { label: "8 Sessions", value: 8 },
  { label: "12 Sessions", value: 12 },
  { label: "16 Sessions", value: 16 },
];

const monthsOptions = [
  "6 MONTHS",
  "12 MONTHS",
  "18 MONTHS",
  "24 MONTHS",
  "36 MONTHS",
];

export default function BookingForm() {
  const [selectedSessions, setSelectedSessions] = useState(8);
  const [selectedMonths, setSelectedMonths] = useState("6 MONTHS");
  const [payInAdvance, setPayInAdvance] = useState(false);

  const basePrice = 29.0;
  const discount = 0.04; // 4%
  const advanceDiscount = 0.03; // 3%

  // حساب السعر النهائي بناءً على عدد الشهور
  const monthsMultiplier = {
    "6 MONTHS": 1,
    "12 MONTHS": 0.9, // خصم 10% على 12 شهر
    "18 MONTHS": 0.85, // خصم 15% على 18 شهر
    "24 MONTHS": 0.8, // خصم 20% على 24 شهر
    "36 MONTHS": 0.75, // خصم 25% على 36 شهر
  };

  const discountedPrice = basePrice * (1 - discount);
  const finalPrice = payInAdvance
    ? discountedPrice * (1 - advanceDiscount)
    : discountedPrice;

  const total = (
    finalPrice *
    selectedSessions *
    monthsMultiplier[selectedMonths]
  ).toFixed(2);
  const totalDiscount = (
    basePrice * selectedSessions * monthsMultiplier[selectedMonths] -
    total
  ).toFixed(2);

  const [loginPhone, setLoginPhone] = useState("");
  const [contactPhone, setContactPhone] = useState("");

  return (
    <div className="min-h-screen bg-gray-100 flex items-center justify-center py-10">
      <div className=" rounded-lg w-full max-w-6xl grid grid-cols-1 md:grid-cols-2 gap-6 p-6">
        {/* LEFT FORM SECTION */}
        <form className="space-y-4  p-6 bg-white rounded-lg shadow-md">
          <h2 className="text-lg font-semibold text-center">
            Registration & Booking at GoStudent
          </h2>
          <p className="text-center text-sm text-gray-500">
            The leading platform for online tutoring.
          </p>

          <div>
            <label className="block text-sm font-medium mb-1">
              Login Phone Number (preferably the student's)
            </label>
            <PhoneInput
              country={"us"} // يمكنك تغييره إلى 'eg' أو غيره
              value={loginPhone}
              onChange={setLoginPhone}
              inputStyle={{
                width: "100%",
                backgroundColor: "#f3f4f6",
                border: "none",
                boxShadow: "none",
              }}
              buttonStyle={{
                border: "none",
                backgroundColor: "##f3f4f6",
              }}
              containerStyle={{
                border: "none",
                backgroundColor: "##f3f4f6",
              }}
            />
          </div>

          <div>
            <label className="block text-sm font-medium">
              Contact Phone Number (preferably the parent's)
            </label>
            <PhoneInput
              country={"us"}
              value={contactPhone}
              onChange={setContactPhone}
              inputStyle={{
                width: "100%",
                backgroundColor: "#f3f4f6",
                border: "none",
                boxShadow: "none",
              }}
              buttonStyle={{
                border: "none",
                backgroundColor: "##f3f4f6",
              }}
              containerStyle={{
                border: "none",
                backgroundColor: "##f3f4f6",
              }}
            />
          </div>

          <input
            type="email"
            placeholder="Contact Email Address"
            className="w-full  p-2 rounded bg-gray-100"
          />
          <input
            type="text"
            placeholder="Contact Name"
            className="w-full  p-2 rounded bg-gray-100 "
          />

          <div className="grid grid-cols-2 gap-2">
            <input
              type="text"
              placeholder="Address"
              className="w-full  p-2 rounded bg-gray-100"
            />
            <input
              type="text"
              placeholder="Nr"
              className="w-full  p-2 rounded bg-gray-100"
            />
          </div>

          <div className="grid grid-cols-3 gap-2">
            <input
              type="text"
              placeholder="Postal Code"
              className="w-full  p-2 rounded bg-gray-100"
            />
            <input
              type="text"
              placeholder="City"
              className="w-full  p-2 rounded bg-gray-100"
            />
            <input
              type="text"
              placeholder="Country"
              className="w-full  p-2 rounded bg-gray-100"
            />
          </div>

          <select
            value={selectedSessions}
            onChange={(e) => setSelectedSessions(Number(e.target.value))}
            className="w-full  p-2 rounded bg-gray-100"
          >
            {sessionsOptions.map((opt) => (
              <option key={opt.value} value={opt.value}>
                {opt.label}
              </option>
            ))}
          </select>

          <div>
            <p className="text-sm font-medium mb-1">Select Payment Method</p>
            <div className="flex gap-4 items-center">
              <label className="flex items-center gap-1">
                <input type="radio" name="payment" defaultChecked />{" "}
                <span>SEPA</span>
              </label>
              <label className="flex items-center gap-1">
                <input type="radio" name="payment" /> <span>Card</span>
              </label>
            </div>
            <input
              type="text"
              placeholder="Card holder"
              className="w-full  p-2 rounded bg-gray-100 mt-2"
            />
            <div className="grid grid-cols-3 gap-2 mt-2">
              <input
                type="text"
                placeholder="Card number"
                className="col-span-2 w-full  p-2 rounded bg-gray-100"
              />
              <input
                type="text"
                placeholder="MM/YY CVC"
                className="w-full  p-2 rounded bg-gray-100"
              />
            </div>
          </div>
        </form>

        {/* RIGHT ORDER SUMMARY SECTION */}
        <div className="bg-gray-50 rounded-lg p-6 space-y-4 ">
          <h3 className="font-bold text-gray-700">Order Overview</h3>
          <div className="grid grid-cols-3 gap-2">
            {monthsOptions.map((month) => (
              <button
                key={month}
                onClick={() => setSelectedMonths(month)}
                className={`text-sm py-1 px-2 rounded border ${
                  selectedMonths === month
                    ? "bg-blue-500 text-white"
                    : "bg-white"
                }`}
              >
                {month}
              </button>
            ))}
          </div>

          <label className="inline-flex items-center space-x-2 text-sm">
            <input
              type="checkbox"
              checked={payInAdvance}
              onChange={() => setPayInAdvance(!payInAdvance)}
            />
            <span>Pay in advance - EXTRA 3% DISCOUNT</span>
          </label>

          <div className="text-sm ">
            <p className="flex justify-between mb-2">
              <span className="text-gray-500">Number of Sessions P.M.:</span>
              <strong>{selectedSessions}</strong>{" "}
            </p>

            {/* Price with strikethrough */}
            <p className="flex justify-between mb-2">
              <span className="text-gray-500">Regular Price:</span>
              <span
                className={`ml-1 ${
                  payInAdvance ? "line-through text-gray-400" : ""
                }`}
              >
                <strong>{(basePrice * selectedSessions).toFixed(2)}€</strong>
              </span>
            </p>

            <p className="flex justify-between mb-2">
              <span className="text-gray-500">Your Price:</span>{" "}
              <strong>{finalPrice.toFixed(2)}€</strong>
            </p>

            <p className="text-green-600 flex justify-between mb-2 ">
              Discount 4%:{" "}
              <span>
                -{(basePrice * selectedSessions * discount).toFixed(2)}€
              </span>
            </p>
            {payInAdvance && (
              <p className="text-green-600 flex justify-between mb-2">
                Extra 3%:{" "}
                <span>
                  -
                  {(
                    basePrice *
                    selectedSessions *
                    discount *
                    advanceDiscount
                  ).toFixed(2)}
                  €
                </span>
              </p>
            )}
            <p className="flex justify-between mb-2">
              <span className="text-gray-500">Setup fee:</span>{" "}
              <strong className="text-blue-600">0.00€</strong>
            </p>
            <p className="text-lg font-semibold flex justify-between mb-2">
              Total P.M.: <span>{total}€</span>
            </p>
          </div>

          <label className="inline-flex items-start text-xs text-gray-600">
            <input type="checkbox" className="mr-2 mt-1" />I accept the{" "}
            <span className="text-blue-600 underline ml-1">
              Terms & Conditions
            </span>{" "}
            and understand my right of withdrawal...
          </label>

          <button className="w-full bg-blue-500 hover:bg-blue-600 text-white py-2 rounded text-sm font-medium">
            Order Now
          </button>

          <p className="text-center text-xs text-gray-500">
            95% SATISFACTION RATE!
          </p>
        </div>
      </div>
    </div>
  );
}
